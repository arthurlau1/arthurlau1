<#
.SYNOPSIS
    Additional security requirements are applied to Universal Naming Convention (UNC) paths specified in Hardened UNC paths before allowing access to them. 
    This aids in preventing tampering with or spoofing of connections to these paths.

.NOTES
    Author          : Arthur Lau
    LinkedIn        : linkedin.com/in/arthur-lau-4a7403172/
    GitHub          : github.com/arthurlau1
    Date Created    : 2025-09-011
    Last Modified   : 2025-09-011
    Date Created    : 2024-09-09
    Last Modified   : 2024-09-09
    Version         : 1.0
    CVEs            : N/A
    Plugin IDs      : N/A
    STIG-ID         : WN10-CC-000050

.TESTED ON
    Date(s) Tested  : 
    Tested By       : 
    Systems Tested  : 
    PowerShell Ver. : 

.USAGE
    Put any usage instructions here.
    Example syntax:
     
#>

# YOUR CODE GOES HERE
$path = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\NetworkProvider\HardenedPaths"
$desiredValue = "RequireMutualAuthentication=1, RequireIntegrity=1"
$names = @("\\*\NETLOGON", "\\*\SYSVOL")

# --- 1. Check if the system is domain-joined ---
try {
    $domain = (Get-WmiObject Win32_ComputerSystem).PartOfDomain
} catch {
    $domain = $false
}

if (-not $domain) {
    Write-Output "NA: System is not domain-joined. STIG WN10-CC-000050 not applicable."
    return
}

# --- 2. Ensure registry path exists ---
if (-not (Test-Path $path)) {
    New-Item -Path $path -Force | Out-Null
    Write-Output "Created registry path: $path"
}

# --- 3. Loop through both required entries ---
foreach ($name in $names) {
    $currentValue = (Get-ItemProperty -Path $path -Name $name -ErrorAction SilentlyContinue).$name

    if ($currentValue -eq $desiredValue) {
        Write-Output "Compliant: $name is already set correctly."
    }
    else {
        # Remediate by setting the correct string value
        New-ItemProperty -Path $path -Name $name -Value $desiredValue -PropertyType String -Force | Out-Null

        if ($null -eq $currentValue) {
            Write-Output "Remediated: $name did not exist, created with value '$desiredValue'"
        } else {
            Write-Output "Remediated: $name was '$currentValue', changed to '$desiredValue'"
        }
    }
}

Write-Output "Verification complete for STIG ID: WN10-CC-000050"
