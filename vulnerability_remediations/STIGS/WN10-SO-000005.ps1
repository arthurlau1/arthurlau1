<#
.SYNOPSIS
   The built-in administrator account is a well-known account subject to attack. It also provides no accountability to individual administrators on a system. It must be disabled to prevent its use.
.NOTES
    Author          : Arthur Lau
    LinkedIn        : linkedin.com/in/arthur-lau-4a7403172/
    GitHub          : github.com/arthurlau1
    Date Created    : 2025-09-011
    Last Modified   : 2025-09-011
    Date Created    : 2024-09-09
    Last Modified   : 2024-09-09
    Version         : 1.0
    CVEs            : N/A
    Plugin IDs      : N/A
    STIG-ID         : WN10-SO-000005

.TESTED ON
    Date(s) Tested  : 
    Tested By       : 
    Systems Tested  : 
    PowerShell Ver. : 

.USAGE
    Put any usage instructions here.
    Example syntax:
     
#>
# STIG ID: WN10-SO-000005
# Purpose: Disable the built-in local Administrator account

Write-Output "Checking compliance for STIG ID: WN10-SO-000005 ..."
Write-Output "Ensuring the built-in Administrator account is disabled..."

# --- 1. Identify the built-in Administrator account (SID ending in -500) ---
$adminAccount = Get-WmiObject Win32_UserAccount | Where-Object { $_.SID -match "-500$" -and $_.LocalAccount -eq $true }

if (-not $adminAccount) {
    Write-Output "No local Administrator account found. This system may be domain-joined or renamed. Marking as NA."
    return
}

$adminName = $adminAccount.Name
$adminStatus = $adminAccount.Disabled

# --- 2. Check compliance ---
if ($adminStatus -eq $true) {
    Write-Output "Compliant: The built-in Administrator account '$adminName' is already disabled."
}
else {
    Write-Output "Non-Compliant: The built-in Administrator account '$adminName' is enabled. Disabling now..."

    try {
        # --- 3. Disable the Administrator account ---
        Disable-LocalUser -Name $adminName -ErrorAction Stop
        Write-Output "Remediated: The built-in Administrator account '$adminName' has been disabled."
    }
    catch {
        Write-Output "Error: Unable to disable '$adminName'. Ensure this script is run as Administrator."
    }
}

# --- 4. Verification ---
$verify = (Get-LocalUser -Name $adminName).Enabled
if (-not $verify) {
    Write-Output "Verification passed: '$adminName' is disabled."
} else {
    Write-Output "Verification failed: '$adminName' is still enabled. Please check manually."
}

Write-Output "Compliance check complete for STIG ID: WN10-SO-000005."

