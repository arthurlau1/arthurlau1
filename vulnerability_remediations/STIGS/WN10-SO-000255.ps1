<#
.SYNOPSIS
    User Account Control (UAC) is a security mechanism for limiting the elevation of privileges, including administrative accounts, unless authorized. 
    Denying elevation requests from standard user accounts requires tasks that need elevation to be initiated by accounts with administrative privileges. 
    This ensures correct accounts are used on the system for privileged tasks to help mitigate credential theft.

.NOTES
    Author          : Arthur Lau
    LinkedIn        : linkedin.com/in/arthur-lau-4a7403172/
    GitHub          : github.com/arthurlau1
    Date Created    : 2025-09-011
    Last Modified   : 2025-09-011
    Date Created    : 2024-09-09
    Last Modified   : 2024-09-09
    Version         : 1.0
    CVEs            : N/A
    Plugin IDs      : N/A
    STIG-ID         : WN10-SO-000255

.TESTED ON
    Date(s) Tested  : 
    Tested By       : 
    Systems Tested  : 
    PowerShell Ver. : 

.USAGE
    Put any usage instructions here.
    Example syntax:
     
#>

# YOUR CODE GOES HERE
$path = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System"
$name = "ConsentPromptBehaviorUser"
$desiredValue = 0

# Ensure the registry path exists
if (-not (Test-Path $path)) {
    New-Item -Path $path -Force | Out-Null
    Write-Output "Created registry path: $path"
}

# Get current value if exists
$currentValue = (Get-ItemProperty -Path $path -Name $name -ErrorAction SilentlyContinue).$name

if ($currentValue -eq $desiredValue) {
    Write-Output "Compliant: $name is already set to $desiredValue"
}
else {
    # Remediate by setting correct value
    Set-ItemProperty -Path $path -Name $name -Value $desiredValue -Type DWord
    if ($null -eq $currentValue) {
        Write-Output "Remediated: $name did not exist, created with value $desiredValue"
    } else {
        Write-Output "Remediated: $name was $currentValue, changed to $desiredValue"
    }
}
