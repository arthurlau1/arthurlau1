<#
.SYNOPSIS
    The Windows Defender SmartScreen filter in Microsoft Edge provides warning messages and blocks potentially malicious websites and file downloads. 
    If users are allowed to ignore warnings from the Windows Defender SmartScreen filter they could still access malicious websites.

.NOTES
    Author          : Arthur Lau
    LinkedIn        : linkedin.com/in/arthur-lau-4a7403172/
    GitHub          : github.com/arthurlau1
    Date Created    : 2025-09-011
    Last Modified   : 2025-09-011
    Date Created    : 2024-09-09
    Last Modified   : 2024-09-09
    Version         : 1.0
    CVEs            : N/A
    Plugin IDs      : N/A
    STIG-ID         : WN10-CC-000230

.TESTED ON
    Date(s) Tested  : 
    Tested By       : 
    Systems Tested  : 
    PowerShell Ver. : 

.USAGE
    Put any usage instructions here.
    Example syntax:
     
#>

# YOUR CODE GOES HERE
# STIG ID: WN10-CC-000230
# Purpose: Prevent users from overriding Microsoft Edge SmartScreen filter warnings

$path = "HKLM:\SOFTWARE\Policies\Microsoft\MicrosoftEdge\PhishingFilter"
$name = "PreventOverride"
$desiredValue = 1

Write-Output "Checking compliance for STIG ID: WN10-CC-000230 ..."

# --- 1. Check Windows Edition and applicability ---
try {
    $edition = (Get-ItemProperty "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion").EditionID
} catch {
    $edition = "Unknown"
}

if ($edition -match "LTSB|LTSC") {
    Write-Output "NA: Windows 10 $edition edition detected (Edge not included). STIG not applicable."
    return
}

# --- 2. Ensure registry path exists ---
if (-not (Test-Path $path)) {
    New-Item -Path $path -Force | Out-Null
    Write-Output "Created registry path: $path"
}

# --- 3. Retrieve current registry value ---
$currentValue = (Get-ItemProperty -Path $path -Name $name -ErrorAction SilentlyContinue).$name

# --- 4. Check compliance ---
if ($currentValue -eq $desiredValue) {
    Write-Output "Compliant: $name is already set to $desiredValue (SmartScreen override disabled)"
}
else {
    # --- 5. Remediate the value ---
    Set-ItemProperty -Path $path -Name $name -Value $desiredValue -Type DWord

    if ($null -eq $currentValue) {
        Write-Output "Remediated: $name did not exist, created with value $desiredValue"
    }
    else {
        Write-Output "Remediated: $name was $currentValue, changed to $desiredValue"
    }
}

Write-Output "Verification complete for STIG ID: WN10-CC-000230"
