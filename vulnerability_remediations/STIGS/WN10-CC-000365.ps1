<#
.SYNOPSIS
    Allowing Windows apps to be activated by voice from the lock screen could allow for unauthorized use. 
    Requiring logon will ensure the apps are only used by authorized personnel.

.NOTES
    Author          : Arthur Lau
    LinkedIn        : linkedin.com/in/arthur-lau-4a7403172/
    GitHub          : github.com/arthurlau1
    Date Created    : 2025-09-011
    Last Modified   : 2025-09-011
    Date Created    : 2024-09-09
    Last Modified   : 2024-09-09
    Version         : 1.0
    CVEs            : N/A
    Plugin IDs      : N/A
    STIG-ID         : WN10-CC-000365

.TESTED ON
    Date(s) Tested  : 
    Tested By       : 
    Systems Tested  : 
    PowerShell Ver. : 

.USAGE
    Put any usage instructions here.
    Example syntax:
     
#>

# YOUR CODE GOES HERE
$path = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy"
$namePrimary = "LetAppsActivateWithVoiceAboveLock"
$nameSecondary = "LetAppsActivateWithVoice"
$desiredValue = 2

# Ensure the registry path exists
if (-not (Test-Path $path)) {
    New-Item -Path $path -Force | Out-Null
    Write-Output "Created registry path: $path"
}

# Retrieve existing values (if any)
$currentPrimary = (Get-ItemProperty -Path $path -Name $namePrimary -ErrorAction SilentlyContinue).$namePrimary
$currentSecondary = (Get-ItemProperty -Path $path -Name $nameSecondary -ErrorAction SilentlyContinue).$nameSecondary

# Check if "Allow voice activation" policy disallows all apps
if ($currentSecondary -eq 2) {
    Write-Output "NA: LetAppsActivateWithVoice is set to 2 (voice activation disallowed globally, STIG not applicable)"
}
else {
    # If primary value equals 2 -> compliant
    if ($currentPrimary -eq $desiredValue) {
        Write-Output "Compliant: $namePrimary is set to $desiredValue (voice activation above lock disabled)"
    }
    else {
        # Remediate the value
        Set-ItemProperty -Path $path -Name $namePrimary -Value $desiredValue -Type DWord
        if ($null -eq $currentPrimary) {
            Write-Output "Remediated: $namePrimary did not exist, created with value $desiredValue"
        } else {
            Write-Output "Remediated: $namePrimary was $currentPrimary, changed to $desiredValue"
        }
    }
}
