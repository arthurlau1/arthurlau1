<#
.SYNOPSIS
    Configuring the system to ignore name release requests, except from WINS servers, prevents a denial of service (DoS) attack. 
    The DoS consists of sending a NetBIOS name release request to the server for each entry in the server's cache, causing a response delay in the normal operation of the servers WINS resolution capability.

.NOTES
    Author          : Arthur Lau
    LinkedIn        : linkedin.com/in/arthur-lau-4a7403172/
    GitHub          : github.com/arthurlau1
    Date Created    : 2025-09-011
    Last Modified   : 2025-09-011
    Date Created    : 2024-09-09
    Last Modified   : 2024-09-09
    Version         : 1.0
    CVEs            : N/A
    Plugin IDs      : N/A
    STIG-ID         : WN10-CC-000090

.TESTED ON
    Date(s) Tested  : 
    Tested By       : 
    Systems Tested  : 
    PowerShell Ver. : 

.USAGE
    Put any usage instructions here.
    Example syntax:
     
#>
# STIG ID: WN10-CC-000090
# Purpose: Ensure Group Policy change events are logged (NoGPOListChanges = 0)

$path = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Group Policy\{35378EAC-683F-11D2-A89A-00C04FBBCFA2}"
$name = "NoGPOListChanges"
$desiredValue = 0

Write-Output "Checking compliance for STIG ID: WN10-CC-000090 ..."
Write-Output "Ensuring Group Policy processing changes are logged (NoGPOListChanges = 0)..."

# --- 1. Ensure registry path exists ---
if (-not (Test-Path $path)) {
    New-Item -Path $path -Force | Out-Null
    Write-Output "Created missing registry path: $path"
}

# --- 2. Retrieve current registry value ---
$currentValue = (Get-ItemProperty -Path $path -Name $name -ErrorAction SilentlyContinue).$name

# --- 3. Check compliance ---
if ($currentValue -eq $desiredValue) {
    Write-Output "Compliant: $name is already set to $desiredValue (GPO change events are logged)."
}
else {
    Write-Output "Non-Compliant: $name is set to $currentValue (should be $desiredValue). Remediating..."
    
    # --- 4. Apply remediation ---
    Set-ItemProperty -Path $path -Name $name -Value $desiredValue -Type DWord
    
    if ($null -eq $currentValue) {
        Write-Output "Remediated: $name did not exist, created with value $desiredValue."
    }
    else {
        Write-Output "Remediated: $name was $currentValue, changed to $desiredValue."
    }
}

# --- 5. Verification ---
$verify = (Get-ItemProperty -Path $path -Name $name -ErrorAction SilentlyContinue).$name
if ($verify -eq $desiredValue) {
    Write-Output "Verification passed: $name is correctly set to $desiredValue."
} else {
    Write-Output "Verification failed: please manually check $path\$name."
}

Write-Output "Compliance check complete for STIG ID: WN10-CC-000090."
