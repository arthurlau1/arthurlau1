<#
.SYNOPSIS
    Allowing Windows apps to be activated by voice from the lock screen could allow for unauthorized use. 
    Requiring logon will ensure the apps are only used by authorized personnel.

.NOTES
    Author          : Arthur Lau
    LinkedIn        : linkedin.com/in/arthur-lau-4a7403172/
    GitHub          : github.com/arthurlau1
    Date Created    : 2025-09-011
    Last Modified   : 2025-09-011
    Date Created    : 2024-09-09
    Last Modified   : 2024-09-09
    Version         : 1.0
    CVEs            : N/A
    Plugin IDs      : N/A
    STIG-ID         : WN10-CC-000205

.TESTED ON
    Date(s) Tested  : 
    Tested By       : 
    Systems Tested  : 
    PowerShell Ver. : 

.USAGE
    Put any usage instructions here.
    Example syntax:
     
#>

# YOUR CODE GOES HERE
$path = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DataCollection"
$name = "AllowTelemetry"

# Allowed compliant values: 0 (Security), 1 (Basic), or 2 (Enhanced if Windows Analytics is used)
$allowedValues = @(0, 1, 2)

# Default desired value (use 1 if unsure)
$desiredValue = 1

# Ensure registry path exists
if (-not (Test-Path $path)) {
    New-Item -Path $path -Force | Out-Null
    Write-Output "Created registry path: $path"
}

# Get current value if exists
$currentValue = (Get-ItemProperty -Path $path -Name $name -ErrorAction SilentlyContinue).$name

# Check compliance
if ($allowedValues -contains $currentValue) {
    switch ($currentValue) {
        0 { Write-Output "Compliant: AllowTelemetry is set to 0 (Security)" }
        1 { Write-Output "Compliant: AllowTelemetry is set to 1 (Basic)" }
        2 { Write-Output "Compliant: AllowTelemetry is set to 2 (Enhanced) â€“ ensure Windows Analytics justification (V-220833)" }
    }
}
else {
    Write-Output "Non-Compliant: AllowTelemetry is set to $currentValue (should be 0, 1, or 2 depending on policy)"
    Write-Output "Remediating to $desiredValue (Basic)..."

    # Apply remediation
    Set-ItemProperty -Path $path -Name $name -Value $desiredValue -Type DWord

    if ($null -eq $currentValue) {
        Write-Output "Remediated: $name did not exist, created with value $desiredValue"
    } else {
        Write-Output "Remediated: $name was $currentValue, changed to $desiredValue"
    }
}
